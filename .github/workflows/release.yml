name: Release

on:
  push:
    branches:
      - dev
      - main

jobs:
  update-version-minor:
    name: Bump Version and Commit
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Install the project
        run: uv sync
      - name: Bump Version
        id: bump-version-minor
        run: |
          echo "VERSION=$(uv run hatch version)" >> $GITHUB_OUTPUT
          uv run hatch version minor
          echo "NEW_VERSION=$(uv run hatch version)" >> $GITHUB_OUTPUT
      - name: "Import GPG key"
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Commit all changed files back to the repository
        id: commit-def
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          commit_user_name: ${{ steps.import-gpg.outputs.name }}
          commit_user_email: ${{ steps.import-gpg.outputs.email }}
          commit_message: "[auto] Bump version: ${{ steps.bump-version-minor.outputs.VERSION }} → ${{ steps.bump-version-minor.outputs.NEW_VERSION }}"
          file_pattern: src/cloud_autopkg_runner/__about__.py
          tagging_message: ${{ steps.bump-version-minor.outputs.NEW_VERSION }}

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: [update-version-minor]
    runs-on: ubuntu-latest
    environment:
      name: TestPyPi
      url: https://test.pypi.org/p/cloud-autopkg-runner
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build
        run: uv build
      - name: Publish
        run: uv publish --index testpypi --trusted-publishing always

  install-library-from-testpypi:
    name: Install from TestPyPI
    needs: [publish-to-testpypi]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Install
        run: uv run --with cloud-autopkg-runner --extra-index-url https://test.pypi.org/simple/ --index-strategy unsafe-best-match --no-project -- python -c "import cloud_autopkg_runner"



  update-version-release:
    name: Bump Version and Commit
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Install the project
        run: uv sync
      - name: Bump Version
        id: bump-version-release
        run: |
          echo "VERSION=$(uv run hatch version)" >> $GITHUB_OUTPUT
          uv run hatch version release
          echo "NEW_VERSION=$(uv run hatch version)" >> $GITHUB_OUTPUT
      - name: "Import GPG key"
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Commit all changed files back to the repository
        id: commit-def
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          commit_user_name: ${{ steps.import-gpg.outputs.name }}
          commit_user_email: ${{ steps.import-gpg.outputs.email }}
          commit_message: "[auto] Bump version: ${{ steps.bump-version-release.outputs.VERSION }} → ${{ steps.bump-version-release.outputs.NEW_VERSION }}"
          file_pattern: src/cloud_autopkg_runner/__about__.py
          tagging_message: ${{ steps.bump-version-release.outputs.NEW_VERSION }}

  publish-to-pypi:
    name: Publish to PyPI
    if: github.ref == 'refs/heads/main'
    needs: [update-version-release]
    runs-on: ubuntu-latest
    environment:
      name: PyPi
      url: https://pypi.org/p/cloud-autopkg-runner
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build
        run: uv build
      - name: Publish
        run: uv publish --trusted-publishing always

  install-library-from-pypi:
    name: Install from PyPI
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Install
        run: uv run --with cloud-autopkg-runner --no-project -- python -c "import cloud_autopkg_runner"
